-- CODE RESERVED ROM
    SMEM_BASE := 0uh16_A000;
    SMEM_SIZE := 0uh16_4000;
-- KEY RESERVED ROM
    KMEM_BASE := 0uh16_6A00;
    KMEM_SIZE := 0uh16_0040;
-- STACK RESERVED ROM
    SDATA_BASE := 0uh16_0400;
    SDATA_SIZE := 0uh16_0C00;
-- HMAC OUTPUT RESERVED ROM
    HMAC_BASE := 0uh16_0230;
    HMAC_SIZE := 0uh16_0020;
--
    LAST_SMEM_ADDR := SMEM_BASE + SMEM_SIZE - 0uh16_2;
    RESET_HANDLER := 0uh16_0000;

    pc_in_srom := "pc" >= SMEM_BASE & "pc" <= LAST_SMEM_ADDR;
    next_pc_in_srom := next("pc") >= SMEM_BASE & next("pc") <= LAST_SMEM_ADDR;

    pc_not_in_srom := !pc_in_srom; 
    daddr_not_in_sdata := "data_addr" < SDATA_BASE | "data_addr" > SDATA_BASE + SDATA_SIZE - 0uh16_1;
    daddr_in_sdata := !daddr_not_in_sdata;
    daddr_not_in_HMAC := "data_addr" < HMAC_BASE | "data_addr" > HMAC_BASE + HMAC_SIZE - 0uh16_1;


-- Exclusive Access to Secure Stack: (1) Only ROM code can read/write the stack and (2) ROM code cannot write outside the stack ---
LTLSPEC G ((pc_not_in_srom & ("r_en" | "w_en") & daddr_in_sdata) -> "reset");

LTLSPEC G ((pc_in_srom & "w_en" & daddr_not_in_sdata & daddr_not_in_HMAC) -> "reset");


