-- CODE RESERVED ROM
    SMEM_BASE := 0uh16_A000;
    SMEM_SIZE := 0uh16_4000;
-- KEY RESERVED ROM
    KMEM_BASE := 0uh16_6A00;
    KMEM_SIZE := 0uh16_0040;
-- STACK RESERVED ROM
    SDATA_BASE := 0uh16_0400;
    SDATA_SIZE := 0uh16_0C00;
-- HMAC OUTPUT RESERVED ROM
    HMAC_BASE := 0uh16_0230;
    HMAC_SIZE := 0uh16_0020;
--
    
    reset := "X_stack_reset" | "AC_reset" | "dma_AC_reset" | "dma_detect_reset" | "dma_X_stack_reset" | "atomicity_reset";

-- Logger specs

LTLSPEC G(reset -> bool("we"));
--experimenting with X
--LTLSPEC G(reset -> X(bool("we")));

LTLSPEC G(!reset -> !bool("we"));

-- X_stack_reset
LTLSPEC G("X_stack_reset" -> (bool("we") & ("wr_data"[36:34] = 0b3_111)));

-- AC_reset
--LTLSPEC G("AC_reset" -> (bool("we") & X("wr_data" = 0ud37_1));
--LTLSPEC G("AC_reset" -> bool("we"));

-- dma_AC_reset
--LTLSPEC G("dma_AC_reset" -> (bool("we") & X("wr_data" = 0ud37_5)));

-- dma_detect_reset
--LTLSPEC G("X_stack_reset" -> X(bool("we") & ("wr_data" = 0b3_100)));

-- dma_X_stack_reset
--LTLSPEC G("dma_X_stack_reset" -> (bool("we") & X("wr_data"[36:34] = 0b3_101)));

-- atomicity_reset
--LTLSPEC G("atomicity_reset" -> (bool("we") & X("wr_data"[36:34] = 0b3_010)));

